{"version":3,"sources":["components/HeaderError/HeaderError.tsx","assets/images/Close.tsx","assets/images/Plus.tsx","utils.ts","assets/images/Chevron.tsx","components/Dropdown/Dropdown.tsx","hooks/useOnClickOutside.tsx","components/Project/Project.tsx","screens/Form/utils.ts","screens/Form/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Position","Close","onClick","xmlns","width","height","viewBox","style","opacity","fill","transform","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeWidth","d","Plus","data","className","HeaderErrorComponent","titleInput","error","children","position","vertical","horizontal","DROPDOWN_DURATION","value","label","NEW_PROJECT","project","details","duration","durationType","DROPDOWN_DATA","Chevron","Dropdown","active","options","onChange","onBlur","useState","opened","setOpened","ref","React","useRef","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","useOnClickOutside","activeField","useMemo","find","option","map","i","chooseOption","Project","onDelete","errors","activeProjects","dirtyProject","setDirtyProject","dirtyDeatils","setDirtyDeatils","dirtyDuration","setDirtyDuration","e","onFocus","type","isDirty","Form","json","setJson","isNameDirty","setIsNameDirty","setActiveProjects","name","projects","filter","pr","projectsDetails","deleteProjects","onKeyDown","window","keyCode","elem","onEnter","id","Date","getTime","projectId","param","newData","JSON","parse","stringify","currentProject","dirty","App","isForm","setIsFrom","setIsDirty","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f03e32e5.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./HeaderError.scss\"\n\nexport enum Position {\n    horizontal = \"horizontal\",\n    vertical = \"vertical\",\n}\n\ntype HeaderErrorProps = {\n    titleInput: string\n    error?: string\n    className?: string\n    position?: Position\n}\n\nconst HeaderErrorComponent: React.FC<HeaderErrorProps> = ({\n    titleInput,\n    error,\n    children,\n    className,\n    position = Position.vertical,\n}) => {\n    return (\n        <div\n            className={`headerError ${className || \"\"} ${\n                position === Position.horizontal ? \"headerError-horizontal\" : \"\"\n            }`}\n        >\n            <span className=\"headerError-title\">{titleInput}</span>\n            <div\n                className={\n                    error\n                        ? \"headerError-children-active\"\n                        : \"headerError-children\"\n                }\n            >\n                {children}\n            </div>\n            {error ? <span className=\"headerError-error\">{error}</span> : null}\n        </div>\n    )\n}\n\nexport { HeaderErrorComponent }\n","import React from \"react\"\nimport { ImageTypes } from \"./types\"\n\nconst Close: React.FC<ImageTypes> = ({ onClick }) => {\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            onClick={() => onClick && onClick()}\n        >\n            <defs />\n            <g style={{ opacity: 0.63 }}>\n                <rect style={{ fill: \"none\" }} width=\"24\" height=\"24\" />\n                <g transform=\"translate(6 6)\">\n                    <path\n                        style={{\n                            fill: \"none\",\n                            stroke: \"#c3c4c9\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeMiterlimit: 10,\n                            strokeWidth: \"2px\",\n                        }}\n                        d=\"M0,0,12,12\"\n                    />\n                    <path\n                        style={{\n                            fill: \"none\",\n                            stroke: \"#c3c4c9\",\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            strokeMiterlimit: 10,\n                            strokeWidth: \"2px\",\n                        }}\n                        d=\"M0,0-12,12\"\n                        transform=\"translate(12)\"\n                    />\n                </g>\n            </g>\n        </svg>\n    )\n}\n\nexport { Close }\n","import React from \"react\"\nimport { ImageTypes } from \"./types\"\n\nconst Plus: React.FC<ImageTypes> = ({ onClick }) => {\n    return (\n        <svg\n            onClick={(data) => onClick && onClick(data)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"40.773\"\n            height=\"40.773\"\n            viewBox=\"0 0 40.773 40.773\"\n        >\n            <defs />\n            <path\n                fill=\"#bbbbc2\"\n                opacity=\"0.5\"\n                className=\"a\"\n                d=\"M49.773,30.82H30.662V49.773H27.955V30.82H9V28.113H27.953V9h2.707V28.113H49.773Z\"\n                transform=\"translate(-9 -9)\"\n            />\n        </svg>\n    )\n}\n\nexport { Plus }\n","export const DROPDOWN_DURATION = [\n    {\n        value: \"years\",\n        label: \"years\",\n    },\n    {\n        value: \"months\",\n        label: \"months\",\n    },\n    {\n        value: \"weeks\",\n        label: \"weeks\",\n    },\n    {\n        value: \"days\",\n        label: \"days\",\n    },\n    {\n        value: \"hours\",\n        label: \"hours\",\n    },\n    {\n        value: \"minutes\",\n        label: \"minutes\",\n    },\n    {\n        value: \"seconds\",\n        label: \"seconds\",\n    },\n]\n\nexport const NEW_PROJECT = {\n    project: null,\n    details: \"\",\n    duration: \"\",\n    durationType: null,\n}\n\nexport const DROPDOWN_DATA = [\n    {\n        label: \"Bank\",\n        value: \"Bank\",\n    },\n    {\n        label: \"Sank\",\n        value: \"Sank\",\n    },\n    {\n        label: \"Tank\",\n        value: \"Tank\",\n    },\n]\n","import React from \"react\"\nimport { ImageTypes } from \"./types\"\n\nconst Chevron: React.FC<ImageTypes> = ({ onClick, stroke = \"#3FA9F5\" }) => {\n    return (\n        <svg\n            onClick={(data) => onClick && onClick(data)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12.55\"\n            height=\"6.12\"\n            viewBox=\"0 0 14.373 8.247\"\n        >\n            <defs />\n            <path\n                className=\"a\"\n                d=\"M237.442,289.489l6.126-6.126,6.126,6.126\"\n                transform=\"translate(250.754 290.55) rotate(180)\"\n                fill=\"none\"\n                stroke={stroke}\n                strokeLinecap=\"round\"\n                strokeWidth=\"1.5px\"\n            />\n        </svg>\n    )\n}\n\nexport { Chevron }\n","import React, { useEffect, useMemo, useState } from \"react\"\nimport { Chevron } from \"../../assets/images/Chevron\"\nimport { useOnClickOutside } from \"../../hooks/useOnClickOutside\"\nimport \"./Dropdown.scss\"\n\ntype DropdownProps = {\n    active: string | null\n    options: {\n        label: string\n        value: string\n    }[]\n    onChange: (option: string) => void\n    onBlur: () => void\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({\n    active,\n    options,\n    onChange,\n    onBlur,\n}) => {\n    const [opened, setOpened] = useState(false)\n    const ref = React.useRef() as React.MutableRefObject<HTMLInputElement>\n    useOnClickOutside(ref, () => setOpened(false))\n    const chooseOption = (option: string): void => {\n        onChange(option)\n        setOpened(false)\n    }\n\n    const activeField = useMemo(() => {\n        return options.find((option) => option.value === active)\n    }, [active, options])\n\n    useEffect(() => {\n        if (!activeField && active !== null) {\n            onBlur()\n        }\n    }, [active, activeField, onBlur])\n\n    return (\n        <div className=\"dropdown\" ref={ref} onBlur={onBlur}>\n            <div className=\"dropdown-head\" onClick={() => setOpened(!opened)}>\n                <span>{activeField?.label}</span>\n                <Chevron />\n            </div>\n            {opened && (\n                <div className=\"dropdown-body\">\n                    {options.map((option, i) => (\n                        <span\n                            key={i}\n                            onClick={() => chooseOption(option.value)}\n                        >\n                            {option.label}\n                        </span>\n                    ))}\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport { Dropdown }\n","import { RefObject, useEffect } from \"react\"\n\ntype AnyEvent = MouseEvent | TouchEvent\n\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\n    ref: RefObject<T>,\n    handler: (event: AnyEvent) => void\n): void {\n    useEffect(() => {\n        const listener = (event: AnyEvent): void => {\n            const el = ref?.current\n\n            if (!el || el.contains(event.target as Node)) {\n                return\n            }\n\n            handler(event)\n        }\n\n        document.addEventListener(`mousedown`, listener)\n        document.addEventListener(`touchstart`, listener)\n\n        return () => {\n            document.removeEventListener(`mousedown`, listener)\n            document.removeEventListener(`touchstart`, listener)\n        }\n    }, [ref, handler])\n}\n\nexport { useOnClickOutside }\n","import React, { useState } from \"react\"\nimport { Close } from \"../../assets/images/Close\"\nimport { DROPDOWN_DURATION } from \"../../utils\"\nimport { Dropdown } from \"../Dropdown/Dropdown\"\nimport { HeaderErrorComponent, Position } from \"../HeaderError/HeaderError\"\nimport \"./Project.scss\"\n\ntype ProjectProps = {\n    project: string | null\n    details: string\n    duration: string\n    durationType: string | null\n    onDelete: () => void\n    onChange: (param: string, value: string) => void\n    errors: (name: string, value: string | null, dirty: boolean) => string\n    activeProjects: {\n        label: string\n        value: string\n    }[]\n}\n\nconst Project: React.FC<ProjectProps> = ({\n    project,\n    details,\n    duration,\n    durationType,\n    onDelete,\n    onChange,\n    errors,\n    activeProjects,\n}) => {\n    const [dirtyProject, setDirtyProject] = useState(false)\n    const [dirtyDeatils, setDirtyDeatils] = useState(false)\n    const [dirtyDuration, setDirtyDuration] = useState(false)\n\n    return (\n        <div className=\"project\">\n            <div className=\"project-close\" onClick={() => onDelete()}>\n                <Close />\n            </div>\n            <HeaderErrorComponent\n                titleInput=\"Projects\"\n                error={errors(\"project\", project, dirtyProject)}\n                position={Position.horizontal}\n            >\n                <Dropdown\n                    onBlur={() => setDirtyProject(true)}\n                    active={project}\n                    options={activeProjects}\n                    onChange={(option) => onChange(\"project\", option)}\n                />\n            </HeaderErrorComponent>\n\n            <HeaderErrorComponent\n                titleInput=\"Details\"\n                error={errors(\"details\", details, dirtyDeatils)}\n                position={Position.horizontal}\n            >\n                <textarea\n                    onBlur={() => setDirtyDeatils(true)}\n                    value={details}\n                    onChange={(e) => onChange(\"details\", e.target.value)}\n                />\n            </HeaderErrorComponent>\n\n            <HeaderErrorComponent\n                titleInput=\"Duration\"\n                error={errors(\n                    \"duration\",\n                    durationType || duration,\n                    dirtyDuration\n                )}\n                position={Position.horizontal}\n            >\n                <div className=\"project-duration\">\n                    <input\n                        onBlur={() => setDirtyDuration(true)}\n                        onFocus={() => setDirtyDuration(true)}\n                        value={duration}\n                        onChange={(e) => onChange(\"duration\", e.target.value)}\n                    />\n                    <Dropdown\n                        active={durationType}\n                        onBlur={() => setDirtyDuration(true)}\n                        options={DROPDOWN_DURATION}\n                        onChange={(option) => onChange(\"durationType\", option)}\n                    />\n                </div>\n            </HeaderErrorComponent>\n        </div>\n    )\n}\n\nexport { Project }\n","export const errors = (\n    type: string,\n    value: string | null,\n    isDirty?: boolean\n): string => {\n    if (!isDirty) {\n        return \"\"\n    }\n\n    switch (type) {\n        case \"name\":\n            if (!value) {\n                return \"is required\"\n            }\n            return \"\"\n        case \"project\":\n            if (!value) {\n                return \"please select a project\"\n            }\n            return \"\"\n        case \"details\":\n            if (!value) {\n                return \"is required\"\n            }\n            return \"\"\n        case \"duration\":\n            if (!value) {\n                return \"is required\"\n            }\n            return \"\"\n        default:\n            return \"\"\n    }\n}\n","import React, { useState } from \"react\"\nimport \"./Form.scss\"\nimport { Close } from \"../../assets/images/Close\"\nimport { Plus } from \"../../assets/images/Plus\"\nimport { HeaderErrorComponent } from \"../../components/HeaderError/HeaderError\"\nimport { Project } from \"../../components/Project/Project\"\nimport { DataType } from \"../../App\"\nimport { DROPDOWN_DATA, NEW_PROJECT } from \"../../utils\"\nimport { errors } from \"./utils\"\n\ntype Options = {\n    [key: string]: string | number\n}\n\ntype FormProps = {\n    json: DataType\n    setJson: (data: DataType) => void\n    isDirty: boolean\n}\n\nconst Form: React.FC<FormProps> = ({ json, setJson, isDirty }) => {\n    const [isNameDirty, setIsNameDirty] = useState(false)\n    const [activeProjects, setActiveProjects] = useState(DROPDOWN_DATA)\n\n    const onEnter = (e: KeyboardEvent): void => {\n        e = e || window.event\n        if (e.keyCode === 13) {\n            const elem = e.target as HTMLInputElement\n            setActiveProjects([\n                ...activeProjects,\n                {\n                    label: elem.value,\n                    value: elem.value,\n                },\n            ])\n        }\n    }\n\n    const onDelete = (projectId: number): void =>\n        setJson({\n            ...json,\n            projectsDetails: json.projectsDetails.filter(\n                ({ id }) => id !== projectId\n            ),\n        })\n\n    const onChange = (\n        param: string,\n        value: string,\n        projectId: number\n    ): void => {\n        const newData = JSON.parse(JSON.stringify(json)) as typeof json\n        const currentProject = newData.projectsDetails.find(\n            ({ id }) => id === projectId\n        ) as Options\n        if (currentProject) {\n            currentProject[param] = value\n        }\n        setJson({\n            ...newData,\n        })\n    }\n\n    const newProject = (): void => {\n        setJson({\n            ...json,\n            projectsDetails: [\n                {\n                    id: +new Date().getTime(),\n                    ...NEW_PROJECT,\n                },\n                ...json.projectsDetails,\n            ],\n        })\n    }\n\n    const deleteProjects = (projects: {\n        label: string\n        value: string\n    }): void => {\n        setActiveProjects(activeProjects.filter((pr) => pr !== projects))\n\n        setJson({\n            ...json,\n            projectsDetails: json.projectsDetails.map((details) => ({\n                ...details,\n                project:\n                    projects.value === details.project ? \"\" : details.project,\n            })),\n        })\n    }\n\n    return (\n        <>\n            <HeaderErrorComponent\n                titleInput=\"name\"\n                error={errors(\"name\", json.name, isDirty || isNameDirty)}\n                className=\"form-body-name\"\n            >\n                <input\n                    onBlur={() => setIsNameDirty(true)}\n                    onFocus={() => setIsNameDirty(true)}\n                    value={json.name}\n                    onChange={(e) => {\n                        setJson({\n                            ...json,\n                            name: e.target.value,\n                        })\n                    }}\n                />\n            </HeaderErrorComponent>\n\n            <div className=\"form-body-projects\">\n                <span className=\"form-body-projects-title\">Projects</span>\n                <div className=\"form-body-projects-row\">\n                    {activeProjects.map((projects, i) => (\n                        <div key={i} className=\"form-body-projects-component\">\n                            <span>{projects.label}</span>\n                            <Close onClick={() => deleteProjects(projects)} />\n                        </div>\n                    ))}\n                    <input\n                        onKeyDown={(e) =>\n                            onEnter(e as unknown as KeyboardEvent)\n                        }\n                    />\n                </div>\n            </div>\n\n            <div className=\"form-body-details\">\n                <span>Projects Details</span>\n                <div className=\"form-body-details-new\" onClick={newProject}>\n                    <Plus />\n                </div>\n            </div>\n\n            <div className=\"form-body-content\">\n                {json.projectsDetails.map((project) => (\n                    <Project\n                        activeProjects={activeProjects}\n                        onDelete={() => onDelete(project.id)}\n                        onChange={(param, value) =>\n                            onChange(param, value, project.id)\n                        }\n                        key={project.id}\n                        errors={(name, value, dirty) =>\n                            errors(name, value, isDirty || dirty)\n                        }\n                        {...project}\n                    />\n                ))}\n            </div>\n        </>\n    )\n}\n\nexport { Form }\n","import React, { useState } from \"react\"\nimport \"./App.scss\"\nimport data from \"./assets/data.json\"\nimport { Form } from \"./screens/Form/Form\"\n\ntype ProjectType = {\n    id: number\n    project: string | null\n    details: string\n    duration: string\n    durationType: string | null\n}\n\nexport type DataType = {\n    name: string\n    projectsDetails: ProjectType[]\n}\n\nfunction App(): JSX.Element {\n    const [json, setJson] = useState(data as DataType)\n    const [isForm, setIsFrom] = useState(true)\n    const [isDirty, setIsDirty] = useState(false)\n    return (\n        <div className=\"app\">\n            <div className=\"app-content\">\n                <div className=\"app-head\">User Projects</div>\n                <div className=\"app-body\">\n                    {isForm ? (\n                        <Form\n                            json={json}\n                            setJson={(newData) => setJson(newData)}\n                            isDirty={isDirty}\n                        />\n                    ) : (\n                        JSON.stringify(json, null, 4)\n                    )}\n                </div>\n                <div className=\"app-footer\">\n                    <span\n                        className=\"app-footer-json\"\n                        onClick={() => {\n                            setIsFrom(!isForm)\n                        }}\n                    >\n                        {isForm ? \"View form JSON\" : \"Show form\"}\n                    </span>\n                    <div className=\"app-footer-buttons\">\n                        <span\n                            onClick={() => {\n                                setJson(data)\n                                setIsDirty(false)\n                            }}\n                        >\n                            Cancel\n                        </span>\n                        <span onClick={() => setIsDirty(true)}>Save</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.scss\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(window.console.warn))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}